<div id="static-modal" data-modal-backdrop="static" tabindex="-1" aria-hidden="true" class=" overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
    <div class="relative p-4 w-full max-w-2xl max-h-full">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
            <!-- Modal header -->
            <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                    Filters
                </h3>
                <button type="button" id="close-modal-button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="static-modal">
                    <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                    </svg>
                    <span class="sr-only">Close modal</span>
                </button>
            </div>
            <!-- Modal body -->
            <div class="p-4 md:p-5 space-y-4">
                <div>
                    <label for="small-input" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">categoria</label>
                    <input type="text" id="category-input" class="block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                </div>
                <div>
                    <label for="service-input" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">servicio</label>
                    <input type="text" id="service-input" class="block w-full p-2 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 text-xs focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                </div>

                <div class="flex flex-row  justify-between">
                <div>
                    <label for="min-range" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Min score</label>
                    <select id="min-range" class="block w-full p-2 mb-6 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                      <option selected>min</option>
                      <option value="1">1 </option>
                      <option value="2">2</option>
                      <option value="3">3</option>
                      <option value="4">4</option>
                      <option value="5">5</option>
                    </select>
                </div>
                <div>
                    <label for="max-range" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Max score</label>
                    <select id="max-range" class="block w-full p-2 mb-6 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
                        <option selected>max</option>
                        <option value="1">1 </option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                      </select>
                </div>
            </div>
            </div>

        </div>
    </div>
</div>

<script>
    import { isModalOpen, categoryFilter, serviceFilter, minRatingFilter, maxRatingFilter } from '../stores/SearchStore';

    isModalOpen.subscribe((value) => {
        const modal = document.getElementById('static-modal') as any;
        if (value) {
            modal.classList.remove('hidden');

        } else {
            modal.classList.add('hidden');

        }
    });
    document.addEventListener('DOMContentLoaded', () => {
        const modal = document.getElementById('static-modal') as any;
        const modalCloseButton = document.getElementById('close-modal-button') as any;
        const categoryInput = document.getElementById('category-input') as any;
        const serviceInput = document.getElementById('service-input') as any;
        const minRange = document.getElementById('min-range') as any;
        const maxRange = document.getElementById('max-range') as any;

        
        categoryInput.addEventListener('input', (event) => {
            categoryFilter.set(event.target.value);
        });
        modalCloseButton.addEventListener('click', () => {
            modal.classList.add('hidden');
            isModalOpen.set(false);
        });
        serviceInput.addEventListener('input', (event) => {
            serviceFilter.set(event.target.value);
        });
        minRange.addEventListener('change', (event) => {
            minRatingFilter.set(event.target.value);
        });
        maxRange.addEventListener('change', (event) => {
            maxRatingFilter.set(event.target.value);
        });

        modalCloseButton.addEventListener('click', () => {
            modal.classList.add('hidden');
            modal.setAttribute('aria-hidden', modal.classList.contains('hidden'));
            isModalOpen.set(false);
        });

        document.addEventListener('keydown', (event) => {
            if (event.key === 'Escape' && !modal.classList.contains('hidden')) {
                modal.classList.add('hidden');
                modal.setAttribute('aria-hidden', modal.classList.contains('hidden'));
                isModalOpen.set(false);
            }
        });
    });



</script>